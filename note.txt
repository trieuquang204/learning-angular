"compilerOptions": {
    "strictPropertyInitialization": false,
    ...
}


course: https://www.youtube.com/watch?v=RDytR8arAJk&list=PL1BztTYDF-QNrtkvjkT6Wjc8es7QB4Gty&index=5
6: How angular app works:
- Trình duyệt ban đầu sẽ load trang index.html. Index html là trang singe page application sẽ được gender nội dung động bên trong.
- Khi chạy angular app file đầu tiên được thực thi là file main.ts. Angular sẽ load AppModule và mọi thứ bắt đầu từ đó.
- Viewsource index.html ngoài trình duyệt sẽ đc inject thêm một đoạn scrip. Đoạn scrip này đc inject tự động bởi angular cli vào file index.html. Vì vậy mỗi khi run ng serve câu lệnh này sẽ rebuild project và nó sẽ tạo js bundles và đc thêm tự động vào file index.
- main.ts => app module => app component ts => app component template => render content index.html

7: Component
- Là một class type scrip: Được khai báo với @Component decorator
- Là một tính năng, thành phần xây dựng lên khối giao diện trong angular app:
- Bao gồm:
+ Một template html: Khai báo những gì sẽ được hiển thị ngoài trang web
+ Một lớp class type scrip: The UI logic
+ Một bộ chọn css: Được sử dụng để style cho template html của component đó.


8: Creating custom component:
src\styles.css: style global của dự án

11: Using Bootstrap in Angular
- npm install --save bootstrap
- file angular.json khai báo thêm style
 "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "src/styles.css"
      ],
- Tắt app chạy lại ng serve



12: Different Selectors in Angular
- Trong file component.ts
selector: '[app-container]',

- Sử dung: <div app-container></div>


13: What is data binding
- Cho phép chúng ta liên kết dữ liệu giữa component class và view template html của nó.

* One way data binding: Chúng ta có thể access component class property từ template của chính nó. Data flow from component to class view template.
Pass data ở dạng một chiều từ component class sang hiển thị ngoài template hoặc ngược lại!

- String interpolation: {{ data }}
- Property binding: [property] = data

* Two way data binding: Data được dàng buộc và đồng bộ giữa class component và view template



14: What is String Interpolation
- String Interpolation được sử dụng để liên kết dữ liệu từ component class sang view template. Luồng data được truyền từ component sang view. Dùng cho one way data binding.


16: What is Event Binding
- Cho phép chúng ta lắng nghe và phản hồi lại với những sự kiện từ người dùng. Ta có thể pass dữ liệu từ view sang component class.


17: Two way data binding | ngModel
- Dùng để đồng bộ dữ liệu giữa component & view

* import { FormsModule } from '@angular/forms';

 imports: [
    BrowserModule,
    FormsModule
  ],

File template: <input type="text" [(ngModel)]="searchValue">
file class component: searchValue? : string;


18: What is Directives? ngIf, ngFor, ngStyle...
- Dùng directives là dạng logic để nói với trình duyệt rằng phần hiển thị nào sẽ được hiển thị trên trình duyệt.
* Component: Dùng component để nói với trình duyệt rằng những gì sẽ được hiển thị ra ngoài trang web.

- Structural directive: Thay đổi phần hiển thị ngoài trang web bởi thêm hoặc xóa DOM element.
- Atribute directive: Được sử dụng như một thuộc tính trên phần tử trang web hiện có để thay đổi giao diện và hành vi của nó.


19: ngFor Directive in Angular | Directives (Structural directive)

20: ngStyle Directive in Angular ( Atribute directive ) : Thay đổi kiểu dáng và hành vi của một phần tử html k sử dụng dom để thêm hay xóa phần tử element.

21: ngIf Directive (Structural directive)

22: ngClass Directive: ( Atribute directive )


23: What is Child Component


24: Custom Property Binding
- Truyền dữ liệu từ component cha xuống component con sử dụng @Input decorator.

27: Template Reference Variable


28: @ViewChild in Angular

29: What is View Encapsulation in Angular

30: ng-content in Angular
- Được sử dụng để chèn nội dung động vào bên trong component
- Nếu có hai ng-content đc sử dụng nó sẽ fill nội dung vào ng-content cuối cùng của template

31:Angular Life Cycle Hooks
- Khi một component mới đc tạo và khi nó tìm thấy một selector nó sẽ khởi tạo một version mới của component đó sau đó sẽ đc add vào dom.
- Ví dụ
<app-container></app-container>
<app-container></app-container>
<app-container></app-container>

angular sẽ khởi tạo app container component 3 lần. Khởi tạo class component đó. Khi class component mới đc khởi tạo angular sẽ trải qua các giai đoạn khác nhau trong tiến trình khởi tạo đó. Ta có thể can thiệp vào quá trình khởi tạo đó qua một vài phương thức mà angular gọi là Life Cycle Hooks

- Khi ứng dụng angular đc chạy đầu tiên nó sẽ khởi tạo và render root component rồi khởi tạo và render các Children & their children. Nó tạo thành một cây component
- Khi angular load component nó bắt đầu tiến trình sử lý và rendering the view. Để làm điều đó nó cần check input properties, data bindings & expressions,



34: Custom Attribute Directive
- Tạo file .directive.ts

import { Directive } from "@angular/core";

@Directive({
  selector: '[setBackground]'
})

+ Khai báo trong declarations của app module


36: @HostListner
- Lắng nghe sự kiện trên dom và phản ứng với những sự kiện đó thông qua các phương thức sử lý


42: How Structural Directive Works
- Tại sao cần sử dụng dấu * trước ngIf:
- Dấu * nói với angular rằng directive là Structural directive sau đó angular sẽ khởi tạo một template là <ng-template>
</ng-template> wrap content bên trong ngIf


44: ngSwitch (Structural directive)
- Là Structural directive nhưng không sử dụng dấu * đằng trước [ngSwitch] vì nó k thao tác add or remote dom.



45: Services in Angular
- Services là một type script có thể tái sử dụng, có thể được sử dụng trong nhiều component trong angular app.


47: Dependency injection
-


48: Hierarchical Injection
- Sử dụng serve trong component C thì serve đó cũng sẽ đc inject trong các component con c1, c2... của component C.
- Nếu khái báo providers service trong cả app module cả file app và trong file component class thì cấp độ trong class sẽ overight phần khai báo trong module


49: Creating a Data Service


50: Injecting Service into another Service
- @Injectable() nói với angular rằng something can be injected in here.


52: What is Observable
- Thực hiện các hoạt động k đồng bộ và sử lý dữ liệu k đồng bộ


53: Error & Completion of Observable

55: Understanding Operators of RxJS
